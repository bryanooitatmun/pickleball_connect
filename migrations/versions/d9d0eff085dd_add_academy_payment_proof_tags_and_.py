"""Add academy, payment proof, tags, and notification models

Revision ID: d9d0eff085dd
Revises: 249ff23c3f1a
Create Date: 2025-03-12 15:18:12.516389

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd9d0eff085dd'
down_revision = '249ff23c3f1a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('academy',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('logo_path', sa.String(length=255), nullable=True),
    sa.Column('website', sa.String(length=128), nullable=True),
    sa.Column('private_url_code', sa.String(length=32), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('private_url_code')
    )
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('academy_manager',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('academy_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('is_owner', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['academy_id'], ['academy.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('academy_id', 'user_id', name='unique_academy_manager')
    )
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('notification_type', sa.String(length=50), nullable=False),
    sa.Column('related_id', sa.Integer(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('academy_coach',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('academy_id', sa.Integer(), nullable=False),
    sa.Column('coach_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['academy_id'], ['academy.id'], ),
    sa.ForeignKeyConstraint(['coach_id'], ['coach.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('academy_id', 'coach_id', name='unique_academy_coach')
    )
    op.create_table('coach_tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('coach_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['coach_id'], ['coach.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('coach_id', 'tag_id', name='unique_coach_tag')
    )
    op.create_table('payment_proof',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('image_path', sa.String(length=255), nullable=False),
    sa.Column('proof_type', sa.String(length=20), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['booking.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('availability', schema=None) as batch_op:
        batch_op.add_column(sa.Column('student_books_court', sa.Boolean(), nullable=True))

    with op.batch_alter_table('booking', schema=None) as batch_op:
        batch_op.add_column(sa.Column('coaching_payment_required', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('coaching_payment_status', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('court_payment_required', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('court_payment_status', sa.String(length=20), nullable=True))

    with op.batch_alter_table('court', schema=None) as batch_op:
        batch_op.add_column(sa.Column('booking_link', sa.String(length=256), nullable=True))

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_academy_manager', sa.Boolean(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('is_academy_manager')

    with op.batch_alter_table('court', schema=None) as batch_op:
        batch_op.drop_column('booking_link')

    with op.batch_alter_table('booking', schema=None) as batch_op:
        batch_op.drop_column('court_payment_status')
        batch_op.drop_column('court_payment_required')
        batch_op.drop_column('coaching_payment_status')
        batch_op.drop_column('coaching_payment_required')

    with op.batch_alter_table('availability', schema=None) as batch_op:
        batch_op.drop_column('student_books_court')

    op.drop_table('payment_proof')
    op.drop_table('coach_tag')
    op.drop_table('academy_coach')
    op.drop_table('notification')
    op.drop_table('academy_manager')
    op.drop_table('tag')
    op.drop_table('academy')
    # ### end Alembic commands ###
